#!/usr/bin/env python

def print_usage():
    from dag import DEFAULT_DAG_CONFIG_FILE, DEFAULT_DAGFILE_NAME
    from dag.shell import DEFAULT_NUMBER_OF_CORES

    print("Usage: gsub [options] <filename>")
    print("Options:")
    print("-d, --dagfile FILE\tSpecify DAG file to be used. Default: {0}"
          .format(DEFAULT_DAGFILE_NAME))
    print("-e, --engine STRING\tName of job batch type. Default: BOINC")
    print("-i, --init FILE\t\tSpecify input file to be used."
          " Default: $HOME/{0}".format(DEFAULT_DAG_CONFIG_FILE))
    print("-n, --cores INT\t\tNumber of cores/threads allowed"
          " in local multiprocessing. (Default: %d)" % DEFAULT_NUMBER_OF_CORES)
    print("-q, --queue STRING\tPath to Message Queue File. (Default: <dag file>.db)")
    print("-s, --setup_only\tSetup the DAG, but do not stage and run jobs. Default: off")
    print("-v, --version\t\tPrint version info.")
    
if __name__ == "__main__":
    from sys import argv
    from getopt import getopt
    import dag
    from dag import gsub
    from dag import Engine,enum2string,string2enum

    init_filename = None
    dagfilename = dag.DEFAULT_DAGFILE_NAME
    start_jobs = True
    num_cores = None

    (optlist, args) = getopt(argv[1:], 'd:e:hi:n:q:sv',
                            ['cores=', 'dagfile=', 'engine=', 'help',
                             'init=', 'queue=', 'setup_only', 'version'])

    engine = Engine.BOINC
    queue_filename = None
    for (opt,val) in optlist:
        while opt[0] == '-':
            opt = opt[1:]
        if opt in ['d','dagfile']:
            dagfilename = val
        elif opt in ["e","engine"]:
            if not val in Engine.__dict__:
                print("Unknown Engine")
                engine_list = ""
                for i in range(0,Engine.NUM_ENGINES):
                    engine_list += " " + enum2string(Engine,i)
                print("Acceptable values are:" + engine_list)
                exit(1)
            engine = string2enum(Engine,val)
        elif opt in ["h","help"]:
            print_usage()
            exit(0)
        elif opt in ['i',"init"]:
            init_filename = val
        elif opt in ['n', 'cores']:
            num_cores = int(val)
        elif opt in ['q', 'queue']:
            queue_filename = val
        elif opt in ['s','setup_only']:
            start_jobs = False
        elif opt in ['v','version']:
            print(dag.__version__)
            exit(0)
        else:
            from sys import stderr
            stderr.write("Unknown option '%s'\n" % opt)
            exit(1)

    if not args:
        print_usage()
        exit(1)

    if gsub.gsub(args[0], start_jobs, dagfilename, init_filename,
                 engine=engine, num_cores=num_cores,
                 queue_filename=queue_filename) is None:
        exit(1)
